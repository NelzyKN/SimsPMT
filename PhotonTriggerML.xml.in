<?xml version="1.0" encoding="iso-8859-1"?>

<!-- Configuration of PhotonTriggerML Module (Balanced Version) -->

<PhotonTriggerML>

  <!-- Energy range for trigger application -->
  <EnergyMin unit="eV"> 1e18 </EnergyMin>
  <EnergyMax unit="eV"> 1e19 </EnergyMax>

  <!-- Initial threshold for photon classification (will be dynamically adjusted) -->
  <PhotonThreshold> 0.5 </PhotonThreshold>

  <!-- Output file for ML analysis results -->
  <OutputFile> photon_trigger_ml_balanced.root </OutputFile>

  <!-- Save detailed features for analysis -->
  <SaveFeatures> true </SaveFeatures>

  <!-- Apply trigger decision to events -->
  <ApplyTrigger> true </ApplyTrigger>

  <!-- Training parameters (optional, can be adjusted) -->
  <TrainingParameters>
    <BatchSize> 64 </BatchSize>
    <LearningRate> 0.001 </LearningRate>
    <LearningRateDecay> 0.99 </LearningRateDecay>
    <TrainingEpochs> 200 </TrainingEpochs>
    <PatienceEpochs> 20 </PatienceEpochs>
    <DropoutRate> 0.3 </DropoutRate>
    <L2Regularization> 0.0001 </L2Regularization>
  </TrainingParameters>

  <!-- Network architecture (optional) -->
  <NetworkArchitecture>
    <InputSize> 20 </InputSize>
    <HiddenLayers>
      <Layer> 32 </Layer>
      <Layer> 24 </Layer>
      <Layer> 16 </Layer>
    </HiddenLayers>
  </NetworkArchitecture>

  <!-- Weights file for saving/loading trained model -->
  <WeightsFile> photon_trigger_weights_balanced.txt </WeightsFile>

  <!-- Load pre-trained weights if available -->
  <LoadPretrainedWeights> false </LoadPretrainedWeights>

  <!-- Buffer sizes for training data -->
  <MaxPhotonBuffer> 5000 </MaxPhotonBuffer>
  <MaxHadronBuffer> 5000 </MaxHadronBuffer>

  <!-- Validation split ratio -->
  <ValidationSplit> 0.1 </ValidationSplit>

  <!-- Enable synthetic sample generation (SMOTE) -->
  <UseSyntheticSamples> true </UseSyntheticSamples>

  <!-- Enable dynamic threshold adjustment -->
  <DynamicThreshold> true </DynamicThreshold>

  <!-- Logging configuration -->
  <LogFile> photon_trigger_ml_balanced.log </LogFile>
  <VerboseLogging> true </VerboseLogging>

</PhotonTriggerML>
